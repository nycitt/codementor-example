{
  "dependencies": {
    "backbone": "^1.2.2",
    "bluebird": "^2.9.34",
    "body-parser": "^1.13.3",
    "bootstrap": "^3.3.5",
    "css-loader": "^0.16.0",
    "expose-loader": "^0.7.0",
    "express": "^4.13.3",
    "file-loader": "^0.8.4",
    "handlebars": "^4.0.2",
    "handlebars-loader": "^1.1.4",
    "jquery": "^2.1.4",
    "json-loader": "^0.5.2",
    "localtunnel": "^1.7.0",
    "mailgun": "^0.5.0",
    "moment": "^2.10.6",
    "parse": "^1.6.3",
    "socket.io": "^1.3.6",
    "socket.io-client": "^1.3.6",
    "style-loader": "^0.12.3",
    "twilio": "^2.3.0",
    "underscore": "^1.8.3",
    "url-loader": "^0.5.6",
    "webpack": "^1.11.0",
    "winston": "^1.0.1"
  },
  "scripts": {
    "start": "node server.js"
  },
  "name": "codementor-example",
  "description": "1. Run `npm install` to generate `package.json` 2. Remove the packages from `package.json` that you won't use. Here is a list of what each does     1. backbone: Backbone.js     2. bluebird: For Promise support in node     3. body-parser: For dealing with json body     4. bootstrap: styling for Frontend     5. css-loader: for including CSS     6. expore-loader: for exponsive jQuery to jQuery plugins     7. express: server     8. file-loader: common dependency     9. handlebars: Templates     10. jquery: Jquery :P     11. json-loader: for loading json files in require     12. localtunnel: for generating a local tunnel so that external services can hit your local server     13. mailgun: mailing service     14. moment: date service     15. parse: database as a service     16. socket.io: socket server     17. socket.io-client: socket client     18. styler-loader: dependency of css-loader     19. twilio: text message API     20. underscore: data manipulation toolkit     21. url-loader: common dependency     22. webpack: frontend asset compressor     23. winston: for logging 3. Copy `config.sample.js` to `config.js` (it's git ignored and should never be in repo, should be manually copied) 3. Install webpack `sudo npm install -g webpack` 4. Install nodemon `sudo npm install -g nodemon` 5. Run webpack watcher in on terminal window `webpack --watch` in project root 6. Run nodemon watchin in another terminal window `nodemon` in project root 7. Enabled/disable the modules in init that you'll be using 8. All your publically accessible content will stem from `public/app/index.js`",
  "version": "1.0.0",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nycitt/codementor-example.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/nycitt/codementor-example/issues"
  },
  "homepage": "https://github.com/nycitt/codementor-example#readme"
}
